# This is a sweep on different phase changing strategies and how
# it can affect the training process for larger datasets
project: small-data-sweep-everything
checkpoint_interval: 30
default_root_dir: experiments/sweep
use_smart_trainer: True
agent_run_args:
  count: 128
sweep_configuration:
  method: grid
  metric:
    goal: minimize
    name: metrics/average-backward_relative_penalty
  parameters:
    trainer:
      callbacks:
        - class_path: ocd.training.callbacks.phase_changer.PhaseChangerCallback
          init_args:
            sweep: True
            sweep_alias:
              - LowPatienceTrainNoReset
              - MediumPatienceTrainNoReset
              - HighPatienceTrainNoReset
            values:
              
                monitor_validation: False
                monitor_training: True
                maximization_epoch_limit: 100
                expectation_epoch_limit: 100
                patience: 20
                cooldown: 50
                reset_optimizers: False
                reinitialize_weights_on_maximization: False
              
                monitor_validation: False
                monitor_training: True
                maximization_epoch_limit: 200
                expectation_epoch_limit: 200
                patience: 30
                cooldown: 100
                reset_optimizers: False
                reinitialize_weights_on_maximization: False
              
                monitor_validation: False
                monitor_training: True
                maximization_epoch_limit: 300
                expectation_epoch_limit: 300
                patience: 40
                cooldown: 200
                reset_optimizers: False
                reinitialize_weights_on_maximization: False
        - class_path: ocd.training.callbacks.save_results.SavePermutationResultsCallback
        - class_path: ocd.training.callbacks.data_visualizer.DataVisualizer
    model:
      init_args:
        sweep: True
        sweep_alias:
          - Large-Large-Linear-0.1
          - Large-Large-Fixed
          - Medium-Medium-Linear-0
          - Medium-Medium-Fixed
          - Large-Medium-Linear-0.1
          - Large-Medium-Fixed
          - Medium-Large-Linear-0
          - Medium-Large-Fixed
        values:
          - lr: [ 0.05, 0.05 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.0005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 2 * (1 - training_module.current_epoch / training_module.trainer.max_epochs) + 0.1

          - lr: [ 0.05, 0.05 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.0005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 1

          - lr: [ 0.005, 0.005 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 2 * (1 - training_module.current_epoch / training_module.trainer.max_epochs)

          - lr: [ 0.005, 0.005 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 1

          - lr: [ 0.05, 0.005 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 2 * (1 - training_module.current_epoch / training_module.trainer.max_epochs) + 0.1

          - lr: [ 0.05, 0.005 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 1

          - lr: [ 0.005, 0.05 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 2 * (1 - training_module.current_epoch / training_module.trainer.max_epochs) 

          - lr: [ 0.005, 0.05 ]
            scheduler_args:
              - mode: min
                factor: 0.8
                patience: 100
                min_lr: 0.000005
                threshold: 0.001
              - mode: min
                factor: 0.8
                patience: 150
                min_lr: 0.0005
                threshold: 0.001
            model_args:
              permutation_learner_args:
                gumbel_noise_std: >
                  lambda self, training_module, **kwargs: 1
    data:
      sweep: True
      sweep_alias:
        - erdos-nonparam-5-seed0
        - erdos-sin-5-seed0
        - erdos-cube-5-seed0
        - erdos-sin-5-seed1
        - erdos-cube-5-seed1
        - erdos-nonparam-5-seed1
        - full-sin-5
        - full-cube-5
        - full-nonparam-5
        - chain-sin-4
        - chain-cube-4
        - chain-nonparam-4
        - full-sin-3
        - full-cube-3
        - full-nonparam-3
      values:
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: non_parametric_non_linear_gaussian_5_1000_erdos_renyi
              observation_size: 1000
              scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 606 }
                s_gamma_rbf_kernel: 1.0
                s_mean_function_activation: { function_descriptor: "def func(x):\n    x[x\
                                    \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                                              function_of_interest: func }
                s_mean_function_activation_signature: softplus
                s_mean_function_weights: [ 0.01, 0.1 ]
                s_variance_rbf_kernel: 1.0
                seed: 711
                t_mean_function_activation: { function_descriptor: "def func(x):\n    return\
                                    \ numpy.sin(x) + x", function_of_interest: func }
                t_mean_function_activation_signature: sin_plus_x
                t_mean_function_weights: [ 0.01, 0.1 ]
                t_variance_rbf_kernel: 1.0
              seed: 196
            val_size: 0.05
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_erdos_renyi_sin_plus_x
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 492 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 422
                t_function: { function_descriptor: "def func(x):\n    return numpy.sin(x)\
                                    \ + x", function_of_interest: func }
                t_function_signature: sin_plus_x
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 698
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_erdos_renyi_cube_dislocate
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 714 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 820
                t_function: { function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                                    \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                                    \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                                    \ = (x - x_mean) / x_std\n    ret = x**3 + 1\n    return ret",
                              function_of_interest: func }
                t_function_signature: cube_and_dislocate
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 20
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_erdos_renyi_sin_plus_x
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 754 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 422
                t_function: { function_descriptor: "def func(x):\n    return numpy.sin(x)\
                                    \ + x", function_of_interest: func }
                t_function_signature: sin_plus_x
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 698
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_erdos_renyi_cube_dislocate
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 1933 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 820
                t_function: { function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                                    \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                                    \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                                    \ = (x - x_mean) / x_std\n    ret = x**3 + 1\n    return ret",
                              function_of_interest: func }
                t_function_signature: cube_and_dislocate
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 20
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: non_parametric_non_linear_gaussian_5_1000_erdos_renyi
              observation_size: 1000
              scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: erdos_renyi, n: 5, p: 0.65, seed: 12500 }
                s_gamma_rbf_kernel: 1.0
                s_mean_function_activation: { function_descriptor: "def func(x):\n    x[x\
                                    \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                                              function_of_interest: func }
                s_mean_function_activation_signature: softplus
                s_mean_function_weights: [ 0.01, 0.1 ]
                s_variance_rbf_kernel: 1.0
                seed: 711
                t_mean_function_activation: { function_descriptor: "def func(x):\n    return\
                                    \ numpy.sin(x) + x", function_of_interest: func }
                t_mean_function_activation_signature: sin_plus_x
                t_mean_function_weights: [ 0.01, 0.1 ]
                t_variance_rbf_kernel: 1.0
              seed: 196
            val_size: 0.05
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_full_sin_plus_x
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 5, seed: 639 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 422
                t_function: { function_descriptor: "def func(x):\n    return numpy.sin(x)\
                                    \ + x", function_of_interest: func }
                t_function_signature: sin_plus_x
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 698
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_5_5000_full_cube_dislocate
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 5, seed: 6399 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 820
                t_function: { function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                                    \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                                    \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                                    \ = (x - x_mean) / x_std\n    ret = x**3 + 1\n    return ret",
                              function_of_interest: func }
                t_function_signature: cube_and_dislocate
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 20
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: non_parametric_non_linear_gaussian_5_1000_full
              observation_size: 1000
              scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 5, seed: 1539 }
                s_gamma_rbf_kernel: 1.0
                s_mean_function_activation: { function_descriptor: "def func(x):\n    x[x\
                                    \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                                              function_of_interest: func }
                s_mean_function_activation_signature: softplus
                s_mean_function_weights: [ 0.01, 0.1 ]
                s_variance_rbf_kernel: 1.0
                seed: 711
                t_mean_function_activation: { function_descriptor: "def func(x):\n    return\
                                    \ numpy.sin(x) + x", function_of_interest: func }
                t_mean_function_activation_signature: sin_plus_x
                t_mean_function_weights: [ 0.01, 0.1 ]
                t_variance_rbf_kernel: 1.0
              seed: 196
            val_size: 0.05
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_4_5000_chain_sin_plus_x
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: chain, n: 4, seed: 574 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 41
                t_function: { function_descriptor: "def func(x):\n    return numpy.sin(x)\
                                    \ + x", function_of_interest: func }
                t_function_signature: sin_plus_x
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 952
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_4_5000_chain_cube_dislocate
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: chain, n: 4, seed: 562 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 881
                t_function: { function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                                    \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                                    \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                                    \ = (x - x_mean) / x_std\n    ret = x**3 + 3\n    return ret",
                              function_of_interest: func }
                t_function_signature: cube_and_dislocate
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 35
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: non_parametric_non_linear_gaussian_4_1000_chain
              observation_size: 1000
              scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: chain, n: 4, seed: 148 }
                s_gamma_rbf_kernel: 1.0
                s_mean_function_activation: { function_descriptor: "def func(x):\n    x[x\
                                    \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                                              function_of_interest: func }
                s_mean_function_activation_signature: softplus
                s_mean_function_weights: [ 0.01, 0.1 ]
                s_variance_rbf_kernel: 1.0
                seed: 990
                t_mean_function_activation: { function_descriptor: "def func(x):\n    return\
                                    \ numpy.sin(x) + x", function_of_interest: func }
                t_mean_function_activation_signature: sin_plus_x
                t_mean_function_weights: [ 0.01, 0.1 ]
                t_variance_rbf_kernel: 1.0
              seed: 440
            val_size: 0.05
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_3_5000_full_sin_plus_x
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 3, seed: 582 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 780
                t_function: { function_descriptor: "def func(x):\n    return numpy.sin(x)\
                                    \ + x", function_of_interest: func }
                t_function_signature: sin_plus_x
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 64
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: parametric_normal_modulated_3_5000_full_cube_dislocate
              observation_size: 5000
              scm_generator: ocd.data.synthetic.ParametricSCMGenerator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 3, seed: 847 }
                noise_parameters: { loc: 0.0, scale: 1.0 }
                noise_type: normal
                s_function: { function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                                    \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func }
                s_function_signature: softplus
                seed: 519
                t_function: { function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                                    \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                                    \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                                    \ = (x - x_mean) / x_std\n    ret = x**3 + 7\n    return ret",
                              function_of_interest: func }
                t_function_signature: cube_and_dislocate
                weight_s: [ 0.5, 1.5 ]
                weight_t: [ 0.5, 1.5 ]
              seed: 997
            val_size: 0.1
        - class_path: lightning_toolbox.DataModule
          init_args:
            batch_size: 32
            dataset: ocd.data.SyntheticOCDDataset
            dataset_args:
              name: non_parametric_non_linear_gaussian_3_1000_full
              observation_size: 1000
              scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
              scm_generator_args:
                graph_generator: ocd.data.scm.GraphGenerator
                graph_generator_args: { graph_type: full, n: 3, seed: 847 }
                s_gamma_rbf_kernel: 1.0
                s_mean_function_activation: { function_descriptor: "def func(x):\n    x[x\
                                    \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                                              function_of_interest: func }
                s_mean_function_activation_signature: softplus
                s_mean_function_weights: [ 0.01, 0.1 ]
                s_variance_rbf_kernel: 1.0
                seed: 95
                t_mean_function_activation: { function_descriptor: "def func(x):\n    return\
                                    \ numpy.sin(x) + x", function_of_interest: func }
                t_mean_function_activation_signature: sin_plus_x
                t_mean_function_weights: [ 0.01, 0.1 ]
                t_variance_rbf_kernel: 1.0
              seed: 210
            val_size: 0.05



