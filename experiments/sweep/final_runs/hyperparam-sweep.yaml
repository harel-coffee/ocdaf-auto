# This is a sweep on different phase changing strategies and how
# it can affect the training process for larger datasets
project: hyperparam-sweep
checkpoint_interval: 30
default_root_dir: experiments/sweep
use_smart_trainer: True
agent_run_args:
  count: 1
sweep_configuration:
  method: grid
  metric:
    goal: minimize
    name: metrics/average-backward_relative_penalty
  parameters:
    trainer:
      callbacks:
        - class_path: ocd.training.callbacks.phase_changer.PhaseChangerCallback
          init_args:
            sweep_group_0:
              sweep_identifier: PhasePatience
              sweep: True
              sweep_alias:
                - ExtLowPatience
                - LowPatience
                - MediumPatience
              values:
                - maximization_epoch_limit: 50
                  expectation_epoch_limit: 20
                  patience: 10
                  cooldown: 10
                - maximization_epoch_limit: 100
                  expectation_epoch_limit: 50
                  patience: 15
                  cooldown: 25
                - maximization_epoch_limit: 200
                  expectation_epoch_limit: 100
                  patience: 20
                  cooldown: 50
                
        - class_path: ocd.training.callbacks.data_visualizer.DataVisualizer

    model:
      init_args:
        model_cls: ocd.models.ocdaf.OCDAF
        model_args:
          sweep_group_1:
            sweep_identifier: Layers
            sweep: True
            sweep_alias:
              - Small
              - Medium
            values:
              - layers: [5, 15, 5]
              - layers: [10, 30, 30, 10]
        sweep_group_2:
          sweep_identifier: LR
          sweep: True
          sweep_alias:
            - Large-Medium
            - Medium-Small
            - Large-Small
          values:
            - lr: [ 0.05, 0.01 ]
            - lr: [ 0.01, 0.001 ]
            - lr: [ 0.05, 0.001 ]
        sweep_group_3:
          sweep_identifier: WeightDecay
          sweep: True
          sweep_alias:
            - MediumWeight
            - LargeWeight
          values:
            - optimizer_args:
                - weight_decay: 0.1
                - weight_decay: 0.01
            - optimizer_args:
                - weight_decay: 1
                - weight_decay: 0.05
    sweep_group_4:
      sweep_identifier: Epoch-Scheduler
      sweep: True
      sweep_alias:
        - 300-10
        - 600-20
        - 1500-50
        - 3000-100
      values:
        - trainer:
            max_epochs: 300
          model:
            init_args:
              scheduler_args:
                - patience: 10
                - patience: 10
        - trainer:
            max_epochs: 600
          model:
            init_args:
              scheduler_args:
                - patience: 20
                - patience: 20
        - trainer:
            max_epochs: 1500
          model:
            init_args:
              scheduler_args:
                - patience: 50
                - patience: 50
        - trainer:
            max_epochs: 3000
          model:
            init_args:
              scheduler_args:
                - patience: 100
                - patience: 100
      
    seed_evertything: 42

    data:
      class_path: lightning_toolbox.DataModule
      init_args:
        dataset_args:
          sweep_group_5:
            sweep_identifier: Dataset
            sweep: True
            sweep_alias:
              - Sin-Erdos-25
              - NonParam-Chain-10
              - Cube-Full-5
              - Sin-Full-3
            values:
              - name: parametric_normal_modulated_25_2048_erdos_renyi_sin_plus_x
                scm_generator: ocd.data.synthetic.ParametricSCMGenerator
                scm_generator_args:
                    graph_generator: ocd.data.scm.GraphGenerator
                    graph_generator_args: {graph_type: erdos_renyi, n: 25, p: 0.4, seed: 282}
                    noise_parameters: {loc: 0.0, scale: 1.0}
                    noise_type: normal
                    s_function: {function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                            \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func}
                    s_function_signature: softplus
                    seed: 979
                    t_function: {function_descriptor: "def func(x):\n    return numpy.sin(x)\
                            \ + x", function_of_interest: func}
                    t_function_signature: sin_plus_x
                    weight_s: [0.5, 1.5]
                    weight_t: [0.5, 1.5]
              - name: non_parametric_non_linear_gaussian_10_2048_chain
                scm_generator: ocd.data.synthetic.GaussianProcessBasedSCMGeberator
                scm_generator_args:
                    graph_generator: ocd.data.scm.GraphGenerator
                    graph_generator_args: {graph_type: chain, n: 10, seed: 83}
                    noise_mean: 0.0
                    noise_std: 1.0
                    s_gamma_rbf_kernel: 1.0
                    s_mean_function_activation: {function_descriptor: "def func(x):\n    x[x\
                            \ < 100] = numpy.log(1 + numpy.exp(x[x < 100]))\n    return x",
                        function_of_interest: func}
                    s_mean_function_activation_signature: softplus
                    s_mean_function_weights: [0.01, 0.1]
                    s_variance_rbf_kernel: 1.0
                    seed: 204
                    t_mean_function_activation: {function_descriptor: "def func(x):\n    return\
                            \ numpy.sin(x) + x", function_of_interest: func}
                    t_mean_function_activation_signature: sin_plus_x
                    t_mean_function_weights: [0.01, 0.1]
                    t_variance_rbf_kernel: 1.0
              - name: parametric_normal_modulated_5_2048_full_cube_dislocate
                scm_generator: ocd.data.synthetic.ParametricSCMGenerator
                scm_generator_args:
                    graph_generator: ocd.data.scm.GraphGenerator
                    graph_generator_args: {graph_type: full, n: 5, seed: 136}
                    noise_parameters: {loc: 0.0, scale: 1.0}
                    noise_type: normal
                    s_function: {function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                            \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func}
                    s_function_signature: softplus
                    seed: 419
                    t_function: {function_descriptor: "def func(x):\n    x[x > 100] = 100\n\
                            \    x[x < -100] = -100\n    x_mean = numpy.mean(x)\n    x_std\
                            \ = numpy.std(x)\n    if x_std == 0:\n        x_std = 1\n    x\
                            \ = (x - x_mean) / x_std\n    ret = x**3 + 6\n    return ret",
                        function_of_interest: func}
                    t_function_signature: cube_and_dislocate
                    weight_s: [0.5, 1.5]
                    weight_t: [0.5, 1.5]
              - name: parametric_normal_modulated_3_2048_full_sin_plus_x
                scm_generator: ocd.data.synthetic.ParametricSCMGenerator
                scm_generator_args:
                    graph_generator: ocd.data.scm.GraphGenerator
                    graph_generator_args: {graph_type: full, n: 3, seed: 582}
                    noise_parameters: {loc: 0.0, scale: 1.0}
                    noise_type: normal
                    s_function: {function_descriptor: "def func(x):\n    x[x < 100] = numpy.log(1\
                            \ + numpy.exp(x[x < 100]))\n    return x", function_of_interest: func}
                    s_function_signature: softplus
                    seed: 780
                    t_function: {function_descriptor: "def func(x):\n    return numpy.sin(x)\
                            \ + x", function_of_interest: func}
                    t_function_signature: sin_plus_x
                    weight_s: [0.5, 1.5]
                    weight_t: [0.5, 1.5]